{"ast":null,"code":"export default {\n  name: 'ActionSidePanel',\n  data() {\n    return {\n      currentPath: this.$route.path,\n      itemsTop: [{\n        image: require('@/assets/grid.png'),\n        name: 'Dashboard',\n        path: '/collections'\n      }, {\n        image: require('@/assets/exchange.png'),\n        name: 'Trade',\n        path: '/nft'\n      }, {\n        image: require('@/assets/analys.png'),\n        name: 'Actions',\n        path: '/'\n      }, {\n        image: require('@/assets/wallet.png'),\n        name: 'Wallet',\n        path: '/wallet'\n      }, {\n        image: require('@/assets/images.png'),\n        name: 'NFT',\n        path: '/nft'\n      }],\n      itemsBottom: [{\n        image: require('@/assets/earphone.png'),\n        name: 'Support'\n      }, {\n        image: require('@/assets/notification.png'),\n        name: 'Notification'\n      }, {\n        image: require('@/assets/info.png'),\n        name: 'InCrypto Info'\n      }, {\n        image: require('@/assets/user.jpeg'),\n        name: 'Dan Tourlan'\n      }]\n    };\n  },\n  created() {\n    this.updateCurrentPath(); // Вызываем метод при создании компонента\n  },\n  watch: {\n    '$route'() {\n      this.updateCurrentPath(); // Вызываем метод при изменении маршрута\n    }\n  },\n  methods: {\n    updateCurrentPath() {\n      this.currentPath = this.$route.path;\n    }\n  }\n};","map":{"version":3,"names":["name","data","currentPath","$route","path","itemsTop","image","require","itemsBottom","created","updateCurrentPath","watch","methods"],"sources":["/Users/madina/Desktop/website/src/components/Action/ActionSidePanel.vue"],"sourcesContent":["<template>\n    <div class=\"side-panel\">\n\n\n        <div class=\"side-panel bg-panel\">\n            <div class=\"panel-content h-screen\">\n                <div class=\"panel-top\">\n                    <!-- <div class=\"logo\">\n                        <img src=\"../../assets/logo.png\" class=\"w-36\" />\n                    </div> -->\n                    <div class=\"panel-text\">\n\n                        <div v-for=\"(item, i) in itemsTop\" :key=\"i\">\n                            <div class=\"text-one  pt-6\">\n\n                                <router-link :to=item.path class=\"flex items-center\">\n                                    <div class=\"logo-one\">\n                                        <img :src=item.image class=\"w-4\">\n                                    </div>\n                                    <div class=\"text-pt font-medium pl-4 text-sm\" :class=\"{ active: currentPath == item.path }\">\n                                        {{ item.name }}</div>\n                                </router-link>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"panel-bottom\">\n\n\n                    <div class=\"panel-text\">\n                        <div v-for=\"(item, i) in itemsBottom\" :key=\"i\">\n\n                            <div class=\"text-one flex items-center pt-6\">\n                                <div class=\"logo-one\">\n                                    <img :src=item.image class=\"w-4\">\n                                </div>\n                                <div class=\"text-pt font-medium pl-4 text-sm\">{{ item.name }}</div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n    </div>\n</template>\n  \n<script>\nexport default {\n    name: 'ActionSidePanel',\n\n    data() {\n        return {\n            currentPath: this.$route.path,\n            itemsTop: [\n                {\n                    image: require('@/assets/grid.png'),\n                    name: 'Dashboard',\n                    path: '/collections'\n\n                },\n                {\n                    image: require('@/assets/exchange.png'),\n                    name: 'Trade',\n                    path: '/nft'\n                },\n                {\n                    image: require('@/assets/analys.png'),\n                    name: 'Actions',\n                    path: '/'\n                },\n                {\n                    image: require('@/assets/wallet.png'),\n                    name: 'Wallet',\n                    path: '/wallet'\n                },\n                {\n                    image: require('@/assets/images.png'),\n                    name: 'NFT',\n                    path: '/nft'\n                },\n            ],\n            itemsBottom: [\n                {\n                    image: require('@/assets/earphone.png'),\n                    name: 'Support'\n                },\n                {\n                    image: require('@/assets/notification.png'),\n                    name: 'Notification'\n                },\n                {\n                    image: require('@/assets/info.png'),\n                    name: 'InCrypto Info'\n                },\n                {\n                    image: require('@/assets/user.jpeg'),\n                    name: 'Dan Tourlan'\n                }\n            ]\n        }\n    },\n    created() {\n        this.updateCurrentPath() // Вызываем метод при создании компонента\n    },\n    watch: {\n        '$route'() {\n            this.updateCurrentPath() // Вызываем метод при изменении маршрута\n        }\n    },\n    methods: {\n        updateCurrentPath() {\n            this.currentPath = this.$route.path\n        }\n    }\n}\n</script>\n  \n<style scoped>\n.side-panel {\n    width: 250px;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    overflow-y: auto;\n    border-right: 1px solid #ccc;\n\n}\n\n.panel-content {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n\n}\n\n.panel-top {\n    flex: 1 1 auto;\n\n}\n\n.panel-bottom {\n    display: flex;\n\n}\n\n.sidebar ul {\n    list-style: none;\n    padding: 0;\n}\n\n.sidebar li {\n    margin-bottom: 10px;\n    cursor: pointer;\n}\n\n.active {\n    color: #fff;\n}\n</style>\n  "],"mappings":"AAoDA,eAAe;EACXA,IAAI,EAAE,iBAAiB;EAEvBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE,IAAI,CAACC,MAAM,CAACC,IAAI;MAC7BC,QAAQ,EAAE,CACN;QACIC,KAAK,EAAEC,OAAO,CAAC,mBAAmB,CAAC;QACnCP,IAAI,EAAE,WAAW;QACjBI,IAAI,EAAE;MAEV,CAAC,EACD;QACIE,KAAK,EAAEC,OAAO,CAAC,uBAAuB,CAAC;QACvCP,IAAI,EAAE,OAAO;QACbI,IAAI,EAAE;MACV,CAAC,EACD;QACIE,KAAK,EAAEC,OAAO,CAAC,qBAAqB,CAAC;QACrCP,IAAI,EAAE,SAAS;QACfI,IAAI,EAAE;MACV,CAAC,EACD;QACIE,KAAK,EAAEC,OAAO,CAAC,qBAAqB,CAAC;QACrCP,IAAI,EAAE,QAAQ;QACdI,IAAI,EAAE;MACV,CAAC,EACD;QACIE,KAAK,EAAEC,OAAO,CAAC,qBAAqB,CAAC;QACrCP,IAAI,EAAE,KAAK;QACXI,IAAI,EAAE;MACV,CAAC,CACJ;MACDI,WAAW,EAAE,CACT;QACIF,KAAK,EAAEC,OAAO,CAAC,uBAAuB,CAAC;QACvCP,IAAI,EAAE;MACV,CAAC,EACD;QACIM,KAAK,EAAEC,OAAO,CAAC,2BAA2B,CAAC;QAC3CP,IAAI,EAAE;MACV,CAAC,EACD;QACIM,KAAK,EAAEC,OAAO,CAAC,mBAAmB,CAAC;QACnCP,IAAI,EAAE;MACV,CAAC,EACD;QACIM,KAAK,EAAEC,OAAO,CAAC,oBAAoB,CAAC;QACpCP,IAAI,EAAE;MACV;IAER;EACJ,CAAC;EACDS,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,iBAAiB,CAAC,GAAE;EAC7B,CAAC;EACDC,KAAK,EAAE;IACH,QAAQR,CAAA,EAAG;MACP,IAAI,CAACO,iBAAiB,CAAC,GAAE;IAC7B;EACJ,CAAC;EACDE,OAAO,EAAE;IACLF,iBAAiBA,CAAA,EAAG;MAChB,IAAI,CAACR,WAAU,GAAI,IAAI,CAACC,MAAM,CAACC,IAAG;IACtC;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}